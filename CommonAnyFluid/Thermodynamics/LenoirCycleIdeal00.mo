within FluidSystemComponents.CommonAnyFluid.Thermodynamics;

block LenoirCycleIdeal00
  /********************************************************
            imports
    ********************************************************/
  import Modelica.Constants;
  import FluidSystemComponents.Types.Switches;
  import FluidSystemComponents.Utilities;
  
  /********************************************************
            Declaration
    ********************************************************/
  /* ---------------------------------------------
            Package
    --------------------------------------------- */
  replaceable package Medium = Modelica.Media.Interfaces.PartialMedium annotation(
    choicesAllMatching = true);
  
  /* ---------------------------------------------
            Switches
    --------------------------------------------- */
  parameter Switches.switch_input_ThermodynamicState switch_u_thermoState = Switches.switch_input_ThermodynamicState.use_T_for_ThermodynamicState "" annotation(
    Dialog(group = "switch"),
    choicesAllMatching = true,
    Evaluate = true,
    HideResult = true);
  parameter Switches.switch_input_fluidQuantity switch_u_fluidQuantity = Switches.switch_input_fluidQuantity.use_mass "" annotation(
    Dialog(group = "switch"),
    choicesAllMatching = true,
    Evaluate = true,
    HideResult = true);
  
  /* ---------------------------------------------
                parameters
  --------------------------------------------- */
  //********** Others **********
  parameter Integer nPts_hs_par[3] = {10, 10, 10} "" annotation(
    Dialog(group = "Others"),
    choicesAllMatching = true,
    Evaluate = true,
    HideResult = false);
  parameter Integer nPts_Ts_par[3] = {10, 10, 10} "" annotation(
    Dialog(group = "Others"),
    choicesAllMatching = true,
    Evaluate = true,
    HideResult = false);
  parameter Integer nPts_pv_par[3] = {10, 10, 10} "" annotation(
    Dialog(group = "Others"),
    choicesAllMatching = true,
    Evaluate = true,
    HideResult = false);
  parameter Integer nPts_us_par[3] = {10, 10, 10} "" annotation(
    Dialog(group = "Others"),
    choicesAllMatching = true,
    Evaluate = true,
    HideResult = false);
  parameter Integer nPts_pVol_par[3] = {10, 10, 10} "" annotation(
    Dialog(group = "Others"),
    choicesAllMatching = true,
    Evaluate = true,
    HideResult = false);
  
  //********** Initialization Parameters **********
  //--- fluidState_1 ---
  parameter Modelica.SIunits.Pressure p_state1_init(displayUnit = "Pa") = 101.3 * 1000 "" annotation(
    Dialog(tab = "Initialization", group = "fluidState_1"));
  parameter Modelica.SIunits.Temperature T_state1_init(displayUnit = "K") = 288.15 "" annotation(
    Dialog(tab = "Initialization", group = "fluidState_1"));
  parameter Modelica.SIunits.SpecificEnthalpy h_state1_init(displayUnit = "J/kg") = T_state1_init * 1.004 * 1000 "" annotation(
    Dialog(tab = "Initialization", group = "fluidState_1"));
  parameter Modelica.SIunits.SpecificEntropy s_state_1_init = 7000.0 "" annotation(
    Dialog(tab = "Initialization", group = "others"));
  //--- fluidState_2 ---
  parameter Modelica.SIunits.Pressure p_state2_init(displayUnit = "Pa") = 101.3 * 1000 "" annotation(
    Dialog(tab = "Initialization", group = "fluidState_2"));
  parameter Modelica.SIunits.Temperature T_state2_init(displayUnit = "K") = 288.15 "" annotation(
    Dialog(tab = "Initialization", group = "fluidState_2"));
  parameter Modelica.SIunits.SpecificEnthalpy h_state2_init(displayUnit = "J/kg") = T_state1_init * 1.004 * 1000 "" annotation(
    Dialog(tab = "Initialization", group = "fluidState_2"));
  parameter Modelica.SIunits.SpecificEntropy s_state_2_init = 7000.0 "" annotation(
    Dialog(tab = "Initialization", group = "others"));
  //--- fluidState_3 ---
  parameter Modelica.SIunits.Pressure p_state3_init(displayUnit = "Pa") = 101.3 * 1000 "" annotation(
    Dialog(tab = "Initialization", group = "fluidState_3"));
  parameter Modelica.SIunits.Temperature T_state3_init(displayUnit = "K") = 288.15 "" annotation(
    Dialog(tab = "Initialization", group = "fluidState_3"));
  parameter Modelica.SIunits.SpecificEnthalpy h_state3_init(displayUnit = "J/kg") = T_state1_init * 1.004 * 1000 "" annotation(
    Dialog(tab = "Initialization", group = "fluidState_3"));
  parameter Modelica.SIunits.SpecificEntropy s_state_3_init = 8000.0 "" annotation(
    Dialog(tab = "Initialization", group = "others"));
  
  
  /* ---------------------------------------------
                Internal variables
    --------------------------------------------- */
  Modelica.SIunits.SpecificEntropy s_state[3] "specific entropy, state 1" annotation(
    Dialog(tab = "Variables", group = "start attribute", enable = false, showStartAttribute = true));
  Modelica.SIunits.Mass massFluidCycle "mass of fluid in single cycle";
  Modelica.SIunits.Volume Vol[3] "volume, state 1 - 3";
  Modelica.SIunits.SpecificVolume v[3] "specific volume, state 1 - 3";
  Modelica.SIunits.Heat Q_1_2 "heat injected into fluid, in process of const. vol. heat addition";
  Modelica.SIunits.Heat Q_3_1 "heat rejected from fluid, in process of const. pressure heat addition";
  Modelica.SIunits.Work WoutCycle "work output, single cycle";
  Modelica.SIunits.Work W_2_3 "work, expansion, state 2 -> 3";
  Real PR_2_1 "Pressure Ratio, P2/P1";
  Real ER_3_2 "Expansion Ratio, Vol3/Vol2";
  Real effThermal "Thermal efficiency";
  //---
  Modelica.SIunits.SpecificEnthalpy arr_h[4];
  Modelica.SIunits.SpecificEnergy arr_u[4];
  Modelica.SIunits.SpecificEntropy arr_s[4];
  Modelica.SIunits.Pressure arr_p[4];
  Modelica.SIunits.Volume arr_V[4];
  Modelica.SIunits.SpecificVolume arr_v[4];
  Modelica.SIunits.Temperature arr_T[4];
  
  
  /* ---------------------------------------------
                Internal objects
    --------------------------------------------- */
  Medium.BaseProperties fluidState[3](
    p(start = {p_state1_init, p_state2_init, p_state3_init}, min = {0.0 + 1.0e-10,0.0 + 1.0e-10,0.0 + 1.0e-10}),
    T(start = {T_state1_init, T_state2_init, T_state3_init}, min = {0.0 + 1.0e-10, 0.0 + 1.0e-10, 0.0 + 1.0e-10}),
    h(start = {h_state1_init, h_state2_init, h_state3_init}, min = {0.0 + 1.0e-10, 0.0 + 1.0e-10, 0.0 + 1.0e-10}),
    state(p(start= {p_state1_init, p_state2_init, p_state3_init})),
    state(T(start= {T_state1_init, T_state2_init, T_state3_init}))
  ) "fluid states";
  
  Utilities.arr_hs_const_p_00 curve_hs[3](redeclare package Medium = Medium, nPts_par = nPts_hs_par) annotation(
    Placement(visible = true, transformation(origin = {-30, 70}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Utilities.arr_Ts_const_p_00 curve_Ts[3](redeclare package Medium = Medium, nPts_par = nPts_Ts_par) annotation(
    Placement(visible = true, transformation(origin = {-30, 40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Utilities.arr_us_const_p_00 curve_us[3](redeclare package Medium = Medium, nPts_par = nPts_us_par) annotation(
    Placement(visible = true, transformation(origin = {-30, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Utilities.arr_pv_const_s_00 curve_pv[3](redeclare package Medium = Medium, nPts_par = nPts_pv_par) annotation(
    Placement(visible = true, transformation(origin = {-30, -20}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Utilities.arr_pVol_const_s_00 curve_pVol[3](redeclare package Medium = Medium, nPts_par = nPts_pVol_par) annotation(
    Placement(visible = true, transformation(origin = {-30, -50}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  
  
  /* ---------------------------------------------
                Interface
  --------------------------------------------- */
  PropulsionSystem.Types.SubelementBus subelementBus1 annotation(
    Placement(visible = true, transformation(origin = {60, 100}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {70, 100}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealInput u_p_fluidState_1(unit = "Pa", displayUnit = "Pa") annotation(
    Placement(visible = true, transformation(origin = {-120, 20}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {-110, 20}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealInput u_T_fluidState_1(unit = "K", displayUnit = "K") if switch_u_thermoState == Switches.switch_input_ThermodynamicState.use_T_for_ThermodynamicState annotation(
    Placement(visible = true, transformation(origin = {-120, -10}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {-110, -10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealInput u_h_fluidState_1(unit = "J/kg", displayUnit = "J/kg") if switch_u_thermoState == Switches.switch_input_ThermodynamicState.use_h_for_ThermodynamicState annotation(
    Placement(visible = true, transformation(origin = {-120, -40}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {-110, -40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealInput u_u_fluidState_1(unit = "J/kg", displayUnit = "J/kg") if switch_u_thermoState == Switches.switch_input_ThermodynamicState.use_u_for_ThermodynamicState annotation(
    Placement(visible = true, transformation(origin = {-120, -70}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {-110, -70}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealInput u_Xi_fluidState_1[Medium.nXi] annotation(
    Placement(visible = true, transformation(origin = {-120, -100}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {-110, -100}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealInput u_Qin(unit = "J", displayUnit = "J") annotation(
    Placement(visible = true, transformation(origin = {-120, 80}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {-110, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  //-----
  Modelica.Blocks.Interfaces.RealInput par_Vol1(unit = "m3", displayUnit = "m3") if switch_u_fluidQuantity == Switches.switch_input_fluidQuantity.use_Volume "valid if switch_u_fluidQuantity==use_volume" annotation(
    Placement(visible = true, transformation(origin = {-60, 120}, extent = {{-20, -20}, {20, 20}}, rotation = -90), iconTransformation(origin = {-60, 110}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  Modelica.Blocks.Interfaces.RealInput par_massFluid(unit = "kg", displayUnit = "kg") if switch_u_fluidQuantity == Switches.switch_input_fluidQuantity.use_mass "valid if switch_u_fluidQuantity==use_mass" annotation(
    Placement(visible = true, transformation(origin = {-20, 120}, extent = {{-20, -20}, {20, 20}}, rotation = -90), iconTransformation(origin = {-20, 110}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  //-----
  Modelica.Blocks.Interfaces.RealOutput y_WoutCycle(unit = "J", displayUnit = "J") annotation(
    Placement(visible = true, transformation(origin = {110, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {110, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealOutput y_p_fluidState_3(unit = "Pa", displayUnit = "Pa") annotation(
    Placement(visible = true, transformation(origin = {110, 20}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {110, 20}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealOutput y_T_fluidState_3(unit = "K", displayUnit = "K") annotation(
    Placement(visible = true, transformation(origin = {110, -10}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {110, -10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealOutput y_Xi_fluidState_3[Medium.nXi] annotation(
    Placement(visible = true, transformation(origin = {110, -100}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {110, -100}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealOutput y_h_fluidState_3(unit = "J/kg", displayUnit = "J/kg") annotation(
    Placement(visible = true, transformation(origin = {110, -40}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {110, -40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealOutput y_u_fluidState_3(unit = "J/kg", displayUnit = "J/kg") annotation(
    Placement(visible = true, transformation(origin = {110, -70}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {110, -70}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  
  //********************************************************************************
equation
  /* ---------------------------------------------
  Connections, interface <-> internal variables
  --------------------------------------------- */
  connect(curve_pVol[3].u_m, massFluidCycle);
  connect(curve_pVol[3].u_Xi, fluidState[3].Xi);
  connect(curve_pVol[3].u_s, s_state[3]);
  connect(curve_pVol[3].u_pLower, fluidState[1].p);
  connect(curve_pVol[3].u_pUpper, fluidState[3].p);
  connect(curve_pVol[2].u_m, massFluidCycle);
  connect(curve_pVol[2].u_Xi, fluidState[2].Xi);
  connect(curve_pVol[2].u_s, s_state[2]);
  connect(curve_pVol[2].u_pLower, fluidState[1].p);
  connect(curve_pVol[2].u_pUpper, fluidState[2].p);
  connect(curve_pVol[1].u_m, massFluidCycle);
  connect(curve_pVol[1].u_Xi, fluidState[1].Xi);
  connect(curve_pVol[1].u_s, s_state[1]);
  connect(curve_pVol[1].u_pLower, fluidState[1].p);
  connect(curve_pVol[1].u_pUpper, fluidState[2].p);
  //---
  connect(curve_hs[3].u_Xi, fluidState[3].Xi);
  connect(curve_hs[3].u_p, fluidState[3].p);
  connect(curve_hs[3].u_sUpper, s_state[2]);
  connect(curve_hs[3].u_sLower, s_state[1]);
  
  connect(curve_hs[2].u_Xi, fluidState[2].Xi);
  connect(curve_hs[2].u_p, fluidState[2].p);
  connect(curve_hs[2].u_sUpper, s_state[2]);
  connect(curve_hs[2].u_sLower, s_state[1]);
  
  connect(curve_hs[1].u_Xi, fluidState[1].Xi);
  connect(curve_hs[1].u_p, fluidState[1].p);
  connect(curve_hs[1].u_sUpper, s_state[3]);
  connect(curve_hs[1].u_sLower, s_state[1]);
  //---
  connect(curve_pv[1].u_pUpper, fluidState[2].p);
  connect(curve_pv[1].u_pLower, fluidState[1].p);
  connect(curve_pv[1].u_s, s_state[1]);
  connect(curve_pv[1].u_Xi, fluidState[1].Xi);
  connect(curve_pv[2].u_pUpper, fluidState[2].p);
  connect(curve_pv[2].u_pLower, fluidState[1].p);
  connect(curve_pv[2].u_s, s_state[2]);
  connect(curve_pv[2].u_Xi, fluidState[2].Xi);
  connect(curve_pv[3].u_pUpper, fluidState[3].p);
  connect(curve_pv[3].u_pLower, fluidState[1].p);
  connect(curve_pv[3].u_s, s_state[3]);
  connect(curve_pv[3].u_Xi, fluidState[3].Xi);
  //---
  connect(curve_Ts[3].u_Xi, fluidState[3].Xi);
  connect(curve_Ts[3].u_p, fluidState[3].p);
  connect(curve_Ts[3].u_sUpper, s_state[3]);
  connect(curve_Ts[3].u_sLower, s_state[2]);
  connect(curve_Ts[2].u_Xi, fluidState[2].Xi);
  connect(curve_Ts[2].u_p, fluidState[2].p);
  connect(curve_Ts[2].u_sUpper, s_state[3]);
  connect(curve_Ts[2].u_sLower, s_state[2]);
  connect(curve_Ts[1].u_Xi, fluidState[1].Xi);
  connect(curve_Ts[1].u_p, fluidState[1].p);
  connect(curve_Ts[1].u_sUpper, s_state[3]);
  connect(curve_Ts[1].u_sLower, s_state[1]);
  //---
  connect(curve_us[3].u_Xi, fluidState[3].Xi);
  connect(curve_us[3].u_p, fluidState[3].p);
  connect(curve_us[3].u_sUpper, s_state[3]);
  connect(curve_us[3].u_sLower, s_state[2]);
  connect(curve_us[2].u_Xi, fluidState[2].Xi);
  connect(curve_us[2].u_p, fluidState[2].p);
  connect(curve_us[2].u_sUpper, s_state[3]);
  connect(curve_us[2].u_sLower, s_state[2]);
  connect(curve_us[1].u_Xi, fluidState[1].Xi);
  connect(curve_us[1].u_p, fluidState[1].p);
  connect(curve_us[1].u_sUpper, s_state[3]);
  connect(curve_us[1].u_sLower, s_state[1]);
  
  
  //--- u ---
  fluidState[1].p = u_p_fluidState_1;
  fluidState[1].Xi = u_Xi_fluidState_1[1:Medium.nXi];
  if switch_u_thermoState == Switches.switch_input_ThermodynamicState.use_T_for_ThermodynamicState then
    fluidState[1].T = u_T_fluidState_1;
  elseif switch_u_thermoState == Switches.switch_input_ThermodynamicState.use_h_for_ThermodynamicState then
    fluidState[1].h = u_h_fluidState_1;
  elseif switch_u_thermoState == Switches.switch_input_ThermodynamicState.use_u_for_ThermodynamicState then
    fluidState[1].u = u_u_fluidState_1;
  end if;
  
  Q_1_2 = u_Qin;
  
  //--- par ---
  if switch_u_fluidQuantity == Switches.switch_input_fluidQuantity.use_Volume then
    Vol[1] = par_Vol1;
  elseif switch_u_fluidQuantity == Switches.switch_input_fluidQuantity.use_mass then
    massFluidCycle = par_massFluid;
  end if;
  
  //--- y ---
  y_p_fluidState_3 = fluidState[3].p;
  y_T_fluidState_3 = fluidState[3].T;
  y_h_fluidState_3 = fluidState[3].h;
  y_u_fluidState_3 = fluidState[3].u;
  y_Xi_fluidState_3[1:Medium.nXi] = fluidState[3].Xi;
  
  y_WoutCycle = WoutCycle;
  
  /* ---------------------------------------------
  Eqns describing physics
  --------------------------------------------- */
  massFluidCycle = Vol[1] * fluidState[1].d;
  v[1] = 1.0 / fluidState[1].d;
  s_state[1] = Medium.specificEntropy(fluidState[1].state);
  
  //--- state1 <-> state2 ---
  // const. vol.  heat addition, closed system
  Vol[2] = Vol[1];
  fluidState[2].d = massFluidCycle / Vol[2];
  v[2] = 1.0 / fluidState[2].d;
  fluidState[2].Xi = fluidState[1].Xi;
  Q_1_2 = massFluidCycle * (fluidState[2].u - fluidState[1].u);
  s_state[2] = Medium.specificEntropy(fluidState[2].state);
  PR_2_1 = fluidState[2].p / fluidState[1].p;
  
  
  //--- state2 <-> state3 ---
  // isentropic expansion, pressrue of after-expansion fixed, open system
  fluidState[3].d = massFluidCycle / Vol[3];
  v[3] = 1.0 / fluidState[3].d;
  s_state[3] = Medium.specificEntropy(fluidState[3].state);
  fluidState[3].Xi = fluidState[2].Xi;
  s_state[3] = s_state[2];
  W_2_3 = massFluidCycle * (fluidState[3].h - fluidState[2].h);
  Vol[3] / Vol[2] = ER_3_2;
  
  
  //--- state3 <-> state1 ---
  // const. pressrue heat rejection, open system
  fluidState[1].p = fluidState[3].p;
  Q_3_1 = massFluidCycle * (fluidState[1].h - fluidState[3].h);
  
  
  //---
  WoutCycle = (-1.0) * W_2_3;
  
  //---
  if 0.0 <= u_Qin then
    effThermal = WoutCycle / Q_1_2;
  else
    effThermal = 0.0;
  end if;
  
  //----------
  for i in 1:3 loop
    
    arr_p[i]= fluidState[i].p;
    arr_h[i]= fluidState[i].h;
    arr_u[i]= fluidState[i].u;
    arr_T[i]= fluidState[i].T;
    
    arr_s[i]= s_state[i];
    arr_V[i]= Vol[i];
    arr_v[i]= v[i];
  end for;
  
  arr_p[4]= fluidState[1].p;
  arr_h[4]= fluidState[1].h;
  arr_u[4]= fluidState[1].u;
  arr_T[4]= fluidState[1].T;
  
  arr_s[4]= s_state[1];
  arr_V[4]= Vol[1];
  arr_v[4]= v[1];
  
  
  
  annotation(
    defaultComponentName = "LenoirCycle",
    Icon(graphics = {Rectangle(fillColor = {255, 255, 255}, fillPattern = FillPattern.Solid, extent = {{-100, 100}, {100, -100}}), Text(origin = {0, -80}, extent = {{-100, 10}, {100, -10}}, textString = "%name"), Bitmap(origin = {2, 10}, extent = {{-94, 78}, {86, -70}}, imageSource = "")}, coordinateSystem(initialScale = 0.1)));
end LenoirCycleIdeal00;
